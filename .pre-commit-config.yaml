# Pre-commit hooks for n8n AWS Serverless
# Install: pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        language_version: python3
        args: ["--line-length=120"]

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort
        args: ["--profile=black", "--line-length=120"]

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.2.0
    hooks:
      - id: flake8
        args:
          [
            "--max-line-length=120",
            "--extend-ignore=E203,W503,D100,D101,D102,D103,D104,D105,D106,D107,D400,D401,B011,B007",
          ]
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions
        exclude: '^(fix_.*\.py|__pycache__|\.git|\.pytest_cache|\.tox|htmlcov|cdk\.out)'

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [yaml, json]
        exclude: '^(cdk\.out/|htmlcov/)'

  # Generic pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        exclude: '^(cdk\.out/|cloudformation/)'
      - id: check-json
      - id: check-added-large-files
        args: ["--maxkb=500"]
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: detect-private-key
        exclude: tests/security/test_secrets_scanning.py
      - id: mixed-line-ending
        args: ["--fix=lf"]

  # Security checks
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ["--baseline", ".secrets.baseline"]
        exclude: '^(\.secrets\.baseline|tests/|docs/)'

  # Python security linting
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.4
    hooks:
      - id: bandit
        args: ["-ll"]
        exclude: "^tests/"

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.45.0
    hooks:
      - id: markdownlint
        args: ["--fix"]

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        files: \.(sh|bash)$

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.13.1-beta
    hooks:
      - id: hadolint-docker
        files: Dockerfile.*

  # Python type checking (optional, can be slow)
  # - repo: https://github.com/pre-commit/mirrors-mypy
  #   rev: v1.7.1
  #   hooks:
  #     - id: mypy
  #       additional_dependencies: [types-PyYAML, types-requests]
  #       args: ['--ignore-missing-imports']

  # Local hooks for project-specific checks
  - repo: local
    hooks:
      - id: make-lint
        name: Run make lint
        entry: make lint-no-black
        language: system
        pass_filenames: false
        types: [python]
        verbose: true

      # Quick unit tests on every commit
      - id: quick-test
        name: Run quick unit tests
        entry: bash -c 'pytest tests/unit -x --tb=short -q || true'
        language: system
        pass_filenames: false
        types: [python]

      # Full test suite on push
      - id: make-test
        name: Run full test suite
        entry: make test
        language: system
        pass_filenames: false
        stages: [push] # Only run tests on push, not on every commit
        verbose: true

# Configuration for specific hooks
ci:
  skip: [shellcheck, hadolint-docker, make-lint, quick-test, make-test] # Skip in CI if not needed
  autofix_prs: false
  autoupdate_schedule: monthly
